<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd"
    xmlns:aop="http://www.springframework.org/schema/aop"> 
    
    <!-- 目标类 -->
    <bean id="userDao" class="com.itheima.jdk.UserDaoImpl"/>
    <!-- 切面  -->
    <bean id="myAspect" class="com.itheima.xml.MyAspect"/>
    <!-- aop编程 -->
    <aop:config>
    	<!-- 配置切面  -->
    	<aop:aspect ref="myAspect">
    		<!--  3.1 配置切入点 ，通知增强哪些方法  -->
    		<aop:pointcut expression="excution(* com.itheima.jdk.*.*(..))" id="myProintCut"/>
    			<!--  3.2 关联通知Advice 和 切入点CutPoint  -->
    			<!-- 3.2.1 前置通知   -->
    			<aop:before method="myBefore" pointcut-ref="myPointCut"/>
    			<!-- 3.2.2 后置通知 ，在方法返回后执行，就可以获得返回值
    			returning属性：用于设置后置通知的第二个参数的名称，类型是Object-->
    			<aop:after-returning method="myAfterReturning"
    				point-ref="myPointCut" returning="returnVal"/>
    			<!-- 3.2.2 环绕通知  -->
    		    <aop:around method="myAround" pointcut-ref="myPointCut" />
    		    <!-- 3.2.4 抛出通知：用于处理程序发生异常 -->
    		    <!-- *注意：如果程序没有异常，将不会执行增强 -->
    		    <!-- *throwing属性：用于设置通知第二个参数的名称 -->
    		    <aop:after-throwing method="myAfterThrowing" picture-ref="myPointCut" throwing="e"/>
    		    <!-- 3.2.5 最终通知：无论程序发生什么事情，都将执行 -->
    		    <aop:after method="myAfter" pointcut-ref="myPointCut" />
    		 	
    	</aop:aspect>
    </aop:config>
 </beans>